#!/usr/bin/env just --justfile

export PATH := "./node_modules/.bin:" + env_var('PATH')

data_gen_root_path := justfile_directory() / ".."
data_root_path := data_gen_root_path / ".."

unified_markdown_output_path := data_root_path / "data-todo-md"
rules_markdown_output_path := data_root_path / "data-rules-md"
bestiary_markdown_output_path := data_root_path / "data-bestiary-md"
bestiary_markdown_dse_output_path := data_root_path / "data-bestiary-md-dse"
bestiary_yaml_output_path := data_root_path / "data-bestiary-yaml"

# TODO - should these inputs move out of the repo?
rules_markdown_source_path := data_gen_root_path / "Rules" / "Draw Steel Rules.md"
bestiary_markdown_source_path := data_gen_root_path / "Rules" / "Draw Steel Bestiary.md"

rules_html_path := data_gen_root_path / "Rules" / "Draw Steel Rules.html"

generate:
    # Convert the Rules markdown to html so it can be parsed with xpath
    just generate_html_pandoc

    just _delete_dir_except_git "{{rules_markdown_output_path}}"

    # Generate sections from the Rules html
    just generate_abilities
    just generate_movement
    just generate_kits
    just generate_ancestries
    just generate_careers
    just generate_cultures
    just generate_complications
    just generate_conditions
    just generate_skills
    just generate_negotiation

    # Generate Bestiary files
    just generate_bestiary
    just format_bestiary

    # Rewrite keyword-type-distance-target data to markdown tables
    just format_ability_tables

    # Linting and formatting of markdown
    just format_markdown

    # TODO - this doesnt belong here?
    # copy the rules and bestiary to output so they can be auto-linked
    mkdir -p "{{rules_markdown_output_path}}/Rules"
    cp "{{rules_markdown_source_path}}" "{{rules_markdown_output_path}}/Rules/Draw Steel Rules.md"
    cp "{{bestiary_markdown_source_path}}" "{{bestiary_markdown_output_path}}/Draw Steel Bestiary.md"

    # link up all the files with obsidian-style links
    just auto_link

    # Input docs belong in the outputs for use
    just copy_inputs_to_outputs

generate_html_pandoc:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Generating html --- "

    # convert from markdown to html
    pandoc --wrap=none \
        --standalone \
        --section-divs \
        -o "{{rules_html_path}}" \
        "{{rules_markdown_source_path}}"

    # avoiding some cdata mess
    sed -i 's/<style>/<style type="text\/css">/g' "{{rules_html_path}}"

    # tidy up the html
    tidy -i "{{rules_html_path}}" > .tmp || true
    mv .tmp "{{rules_html_path}}"

    # Replace html entities
    sed -i 's/&#8220;/"/g; s/&#8221;/"/g; s/&amp;/&/g; s/&lt;/</g; s/&gt;/>/g; s/\&nbsp\;/ /g;' "{{rules_html_path}}"
    sed -i "s/&#8217;/'/g; s/â€™/'/g;" "{{rules_html_path}}"

generate_abilities:
    #!/usr/bin/env bash
    set -euo pipefail

    abilities_path="{{rules_markdown_output_path}}/Abilities"

    # Conduit
    rm -rf "$abilities_path/Conduit"
    #just generate_section "$abilities_path/Conduit" "//section[@id='conduit-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Conduit/Signature Abilities" "//section[@id='conduit-abilities']//section[@id='signature-ability']//section[@class='level6']"
    just generate_section "$abilities_path/Conduit/3-Piety Abilities" "//section[@id='conduit-abilities']//section[@id='piety-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Conduit/5-Piety Abilities" "//section[@id='conduit-abilities']//section[@id='piety-abilities-1']//section[@class='level6']"
    just generate_section "$abilities_path/Conduit/Triggered Actions" "//section[@id='conduit']//section[@id='triggered-action']//section[@class='level5']"
    just generate_index "$abilities_path/Conduit"

    # Elementalist
    rm -rf "$abilities_path/Elementalist"
    #just generate_section "$abilities_path/Elementalist" "//section[@id='elementalist-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Elementalist/Signature Abilities" "//section[@id='elementalist-abilities']//section[@id='signature-ability-1']//section[@class='level6']"
    just generate_section "$abilities_path/Elementalist/3-Essence Abilities" "//section[@id='elementalist-abilities']//section[@id='essence-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Elementalist/5-Essence Abilities" "//section[@id='elementalist-abilities']//section[@id='essence-abilities-1']//section[@class='level6']"
    just generate_section "$abilities_path/Elementalist/Triggered Actions" "//section[@id='elementalist']//section[@id='specialization-triggered-action']//section[@class='level5']"
    just generate_index "$abilities_path/Elementalist"

    # Fury
    rm -rf "$abilities_path/Fury"
    #just generate_section "$abilities_path/Fury" "//section[@id='fury-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Fury/Signature Abilities" "//section[@id='fury-abilities']//section[@id='signature-ability-2']//section[@class='level6']"
    just generate_section "$abilities_path/Fury/3-Rage Abilities" "//section[@id='fury-abilities']//section[@id='rage-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Fury/5-Rage Abilities" "//section[@id='fury-abilities']//section[@id='rage-abilities-1']//section[@class='level6']"
    just generate_section "$abilities_path/Fury/Triggered Actions" "//section[@id='fury']//section[@id='aspect-triggered-action']//section[@class='level5']"
    rm "$abilities_path/Fury/Triggered Actions/Fury Triggered Actions.md"
    just generate_index "$abilities_path/Fury"

    # Shadow
    #just generate_section "$abilities_path/Shadow" "//section[@id='shadow-abilities']//section[@class='level6']"
    rm -rf "$abilities_path/Shadow"
    just generate_section "$abilities_path/Shadow/Signature Abilities" "//section[@id='shadow-abilities']//section[@id='signature-ability-7']//section[@class='level6']"
    just generate_section "$abilities_path/Shadow/3-Insight Abilities" "//section[@id='shadow-abilities']//section[@id='insight-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Shadow/5-Insight Abilities" "//section[@id='shadow-abilities']//section[@id='insight-abilities-1']//section[@class='level6']"
    just generate_section "$abilities_path/Shadow/Triggered Actions" "//section[@id='shadow']//section[@id='college-triggered-action']//section[@class='level5']"
    rm "$abilities_path/Shadow/Triggered Actions/Shadow Triggered Actions.md"
    just generate_index "$abilities_path/Shadow"

    # Tactician
    rm -rf "$abilities_path/Tactician"
    #just generate_section "$abilities_path/Tactician" "//section[@id='tactician-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Tactician/3-Focus Abilities" "//section[@id='tactician-abilities']//section[@id='focus-abilities']//section[@class='level6']"
    just generate_section "$abilities_path/Tactician/5-Focus Abilities" "//section[@id='tactician-abilities']//section[@id='focus-abilities-1']//section[@class='level6']"
    just generate_section "$abilities_path/Tactician/Triggered Actions" "//section[@id='tactician']//section[@id='doctrine-triggered-action']//section[@class='level5']"
    rm "$abilities_path/Tactician/Triggered Actions/Tactician Triggered Actions.md"
    just generate_index "$abilities_path/Tactician"

    # Common Maneuvers
    just generate_section "$abilities_path/Common Maneuvers" "//section[@id='combat']//section[@id='maneuvers']//section[@class='level4']"

    # Common Actions
    just generate_section "$abilities_path/Common Actions" "//section[@id='combat']//section[@id='actions']//section[@class='level4']"

generate_index directory_path:
    #!/usr/bin/env bash
    set -euo pipefail

    index_name=$(basename "{{directory_path}}")
    echo >&2 "[JUST] Generating index for $index_name"

    index_path="{{directory_path}}/index.md"
    echo "# $index_name Abilities" > "$index_path"
    echo "" >> "$index_path"
    python3 ability_table.py "{{directory_path}}" -c name kind cost ability_type distance target >> "$index_path"

generate_movement:
    #!/usr/bin/env bash
    set -euo pipefail

    movement_path="{{rules_markdown_output_path}}/Movement"

    xpath="//section[@id='combat']//section[@id='movement']//section[@class='level4']"
    just generate_section "$movement_path" "$xpath"
    xpath="//section[@id='combat']//section[@id='movement-types']//section[@class='level5']"
    just generate_section "$movement_path" "$xpath" "skip_delete"

    rm "${movement_path}/Cant Exceed Speed.md"
    rm "${movement_path}/Movement Types.md"

generate_kits:
    #!/usr/bin/env bash
    set -euo pipefail

    martial_path="{{rules_markdown_output_path}}/Kits/Martial Kits"
    xpath="//section[@id='kits']//section[@id='martial-kits']//section[@class='level4']"
    just generate_section "$martial_path" "$xpath"

    caster_path="{{rules_markdown_output_path}}/Kits/Caster Kits"
    xpath="//section[@id='kits']//section[@id='caster-kits']//section[@class='level4']"
    just generate_section "$caster_path" "$xpath"

generate_ancestries:
    #!/usr/bin/env bash
    set -euo pipefail
    ancestries_path="{{rules_markdown_output_path}}/Ancestries"
    xpath="//section[@id='ancestries']//section[@class='level3']"
    just generate_section "$ancestries_path" "$xpath"

    # removes any extra sections
    rm "${ancestries_path}/Starting Size And Speed.md"
    rm "${ancestries_path}/On The Origin Of Species.md"

generate_careers:
    #!/usr/bin/env bash
    set -euo pipefail
    careers_path="{{rules_markdown_output_path}}/Careers"
    xpath="//section[@id='career-1']//section[@class='level3']"
    just generate_section "$careers_path" "$xpath"

    # removes any extra sections
    rm "${careers_path}/Career Benefits.md"
    rm "${careers_path}/Career Questions.md"
    rm "${careers_path}/Inciting Incident.md"

generate_cultures:
    #!/usr/bin/env bash
    set -euo pipefail
    cultures_path="{{rules_markdown_output_path}}/Cultures"

    xpath="//section[@id='culture-1']//section[@id='culture-benefits']//section[@id='environment']//section[@class='level6']"
    just generate_section "$cultures_path/Environments" "$xpath"

    xpath="//section[@id='culture-1']//section[@id='culture-benefits']//section[@id='organization']//section[@class='level5']"
    just generate_section "$cultures_path/Organizations" "$xpath"

    xpath="//section[@id='culture-1']//section[@id='culture-benefits']//section[@id='upbringing']//section[@class='level5']"
    just generate_section "$cultures_path/Upbringing" "$xpath"

    # removes any extra sections
    rm "${cultures_path}/Upbringing/But I Really Want Alertness.md"

generate_complications:
    #!/usr/bin/env bash
    set -euo pipefail
    complications_path="{{rules_markdown_output_path}}/Complications"
    xpath="//section[@id='complications']//section[@id='determine-complication']//section[@class='level4']"
    just generate_section "$complications_path" "$xpath"
    rm "${complications_path}/Complications Table.md"

generate_skills:
    #!/usr/bin/env bash
    set -euo pipefail
    skills_path="{{rules_markdown_output_path}}/Skills"
    xpath="//section[@id='tests']//section[@id='skill-groups']//section[@class='level5']"
    just generate_section "$skills_path" "$xpath"

    # removes any extra sections
    rm "${skills_path}/Are All Skills Equal?.md"
    rm "${skills_path}/For The Director: Make Your Own Skills.md"

generate_conditions:
    #!/usr/bin/env bash
    set -euo pipefail
    conditions_path="{{rules_markdown_output_path}}/Conditions"
    xpath="//section[@id='abilities']//section[@id='conditions']//section[@class='level4']"
    just generate_section "$conditions_path" "$xpath"

generate_negotiation:
    #!/usr/bin/env bash
    set -euo pipefail

    negotiation_path="{{rules_markdown_output_path}}/Negotiation"
    xpath="//section[@id='list-of-motivations-and-pitfalls']//section[@class='level5']"
    just generate_section "$negotiation_path/Motivations and Pitfalls" "$xpath"
    rm "$negotiation_path/Motivations and Pitfalls/Npcs Change Over Time.md"

# Generate markdown files for all matches of an xpath (via html)
generate_section destination_path xpath skip_delete="true":
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Generating {{destination_path}} --- "
    source ./util.bash

    if [ "{{skip_delete}}" == "true" ]; then
        rm -rf "{{destination_path}}"
    else
        echo "SKIP DELETE"
    fi

    python3 ./query.py "{{xpath}}" "{{rules_html_path}}" "{{destination_path}}"
    html_folder_to_md "{{destination_path}}"

# Converts unordered lists for ability keywords, type, distance, and targets into a markdown table
format_ability_tables:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Formatting ability tables --- "

    python3 format_ability_tables.py "{{rules_markdown_output_path}}/"
    python3 format_ability_tables.py "{{bestiary_markdown_output_path}}/"

# Generale formatting on generated markdown files (mdformat)
format_markdown:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Formatting Markdown --- "
    mdformat --version
    for dir in {{rules_markdown_output_path}}/*/ ; do
        mdformat "$dir"
    done
    mdformat "{{bestiary_markdown_output_path}}"

# Generates links between markdown files
auto_link:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Linking generated notes to each other --- "

    # TODO - this is not going to link the bestiary, is that okay?
    python3 obs-auto-linker.py {{rules_markdown_output_path}}/

# Generates the Bestiary folder
generate_bestiary:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Generating Bestiary --- "
    rm -rf "{{bestiary_markdown_output_path}}/*.md"
    rm -rf "{{bestiary_markdown_dse_output_path}}/*.md"
    rm -rf "{{bestiary_yaml_output_path}}/*.yaml"
    python3 extract_statblocks.py "{{bestiary_markdown_source_path}}" "{{bestiary_markdown_output_path}}" "{{bestiary_markdown_dse_output_path}}" "{{bestiary_yaml_output_path}}"

# Formats markdown in the bestiary folder
format_bestiary:
    #!/usr/bin/env bash
    set -euo pipefail
    echo >&2 "[JUST] --- Formatting Bestiary --- "
    for file in {{bestiary_markdown_output_path}}/*.md ; do
        python3 format_statblock.py "$file"
    done

copy_inputs_to_outputs:
    #!/usr/bin/env bash
    set -euo pipefail
    cp "{{rules_markdown_source_path}}" "{{rules_markdown_output_path}}/Rules/Draw Steel Rules (raw).md"
    cp "{{rules_html_path}}" "{{rules_markdown_output_path}}/Rules"
    cp "{{bestiary_markdown_source_path}}" "{{bestiary_markdown_output_path}}/Draw Steel Bestiary (raw).md"

# deletes all the (non-hidden) files in a directory
_delete_dir_except_git dir_to_delete:
    #!/usr/bin/env bash
    set -euo pipefail
    tempdir="$(mktemp -d)"
    echo "$tempdir"
    # add a dummy file to avoid crashing in case the dir is empty
    touch "{{dir_to_delete}}/dummy.txt"
    mv "{{dir_to_delete}}"/* "${tempdir}/"
    # by default dotglob will prevent hidden files from being included in * wildcard globs
    if [ -d "${tempdir}/.git" ]; then
        mv "${tempdir}/.git" "{{dir_to_delete}}"
    fi
    rm -rf "$tempdir"

